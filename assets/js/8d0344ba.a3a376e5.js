"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[218],{3905:function(e,t,n){n.d(t,{Zo:function(){return p},kt:function(){return g}});var i=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);t&&(i=i.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,i)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,i,r=function(e,t){if(null==e)return{};var n,i,r={},a=Object.keys(e);for(i=0;i<a.length;i++)n=a[i],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(i=0;i<a.length;i++)n=a[i],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var l=i.createContext({}),c=function(e){var t=i.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},p=function(e){var t=c(e.components);return i.createElement(l.Provider,{value:t},e.children)},u="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return i.createElement(i.Fragment,{},t)}},m=i.forwardRef((function(e,t){var n=e.components,r=e.mdxType,a=e.originalType,l=e.parentName,p=s(e,["components","mdxType","originalType","parentName"]),u=c(n),m=r,g=u["".concat(l,".").concat(m)]||u[m]||d[m]||a;return n?i.createElement(g,o(o({ref:t},p),{},{components:n})):i.createElement(g,o({ref:t},p))}));function g(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var a=n.length,o=new Array(a);o[0]=m;var s={};for(var l in t)hasOwnProperty.call(t,l)&&(s[l]=t[l]);s.originalType=e,s[u]="string"==typeof e?e:r,o[1]=s;for(var c=2;c<a;c++)o[c]=n[c];return i.createElement.apply(null,o)}return i.createElement.apply(null,n)}m.displayName="MDXCreateElement"},9147:function(e,t,n){n.r(t),n.d(t,{assets:function(){return p},contentTitle:function(){return l},default:function(){return g},frontMatter:function(){return s},metadata:function(){return c},toc:function(){return u}});var i=n(7462),r=n(3366),a=(n(7294),n(3905)),o=["components"],s={id:"getting-started",title:"Getting started",sidebar_label:"Getting Started"},l=void 0,c={unversionedId:"getting-started",id:"getting-started",title:"Getting started",description:"ArtemisNetCoreClient is an open-source effort to equip .NET developers with a powerful, straightforward client for Apache ActiveMQ Artemis. Utilizing the broker's CORE protocol, this library focuses on high-performance messaging, ensuring compatibility and comprehensive feature support with Apache ActiveMQ Artemis.",source:"@site/../docs/getting-started.md",sourceDirName:".",slug:"/getting-started",permalink:"/dotnet-activemq-artemis-core-client/docs/getting-started",draft:!1,editUrl:"https://github.com/Havret/dotnet-activemq-artemis-core-client/edit/master/website/../docs/getting-started.md",tags:[],version:"current",frontMatter:{id:"getting-started",title:"Getting started",sidebar_label:"Getting Started"},sidebar:"someSidebar"},p={},u=[{value:"Installation",id:"installation",level:2},{value:"API overview",id:"api-overview",level:2},{value:"Creating a Connection",id:"creating-a-connection",level:2},{value:"Initializing the Endpoint",id:"initializing-the-endpoint",level:3},{value:"Establishing a Connection",id:"establishing-a-connection",level:3}],d={toc:u},m="wrapper";function g(e){var t=e.components,n=(0,r.Z)(e,o);return(0,a.kt)(m,(0,i.Z)({},d,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("p",null,"ArtemisNetCoreClient is an open-source effort to equip .NET developers with a powerful, straightforward client for Apache ActiveMQ Artemis. Utilizing the broker's CORE protocol, this library focuses on high-performance messaging, ensuring compatibility and comprehensive feature support with Apache ActiveMQ Artemis."),(0,a.kt)("h2",{id:"installation"},"Installation"),(0,a.kt)("p",null,"The library is distributed via ",(0,a.kt)("a",{parentName:"p",href:"https://www.nuget.org/packages/ArtemisNetCoreClient"},"NuGet"),". You can add ArtemisNetCoreClient NuGet package using dotnet CLI:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-sh"},"dotnet add package  ArtemisNetCoreClient --prerelease\n")),(0,a.kt)("h2",{id:"api-overview"},"API overview"),(0,a.kt)("p",null,"The API interfaces and classes are defined in the ",(0,a.kt)("inlineCode",{parentName:"p"},"ActiveMQ.Artemis.Core.Client")," namespace:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-csharp"},"using ActiveMQ.Artemis.Core.Client;\n")),(0,a.kt)("p",null,"The main API interfaces and classes are:"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"IConnection"),":  represents a connection with the broker"),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"ConnectionFactory"),":  constructs ",(0,a.kt)("inlineCode",{parentName:"li"},"IConnection")," instances"),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"ISession"),": represents a context for producing and consuming messages"),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"IConsumer"),": represents a message consumer"),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"IProducer"),": represents a message producer attached to a specified ",(0,a.kt)("em",{parentName:"li"},"address")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"IAnonymousProducer"),": represents a message producer capable of sending messages to multiple addresses")),(0,a.kt)("h2",{id:"creating-a-connection"},"Creating a Connection"),(0,a.kt)("p",null,"To send or receive messages, you first need to establish a connection with the broker endpoint. This connection process starts by setting up an ",(0,a.kt)("inlineCode",{parentName:"p"},"Endpoint")," class instance, which specifies the connection parameters."),(0,a.kt)("h3",{id:"initializing-the-endpoint"},"Initializing the Endpoint"),(0,a.kt)("p",null,"You can initialize an ",(0,a.kt)("inlineCode",{parentName:"p"},"Endpoint")," object using the following object initializer in C#:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-csharp"},'var endpoint = new Endpoint\n{\n    Host = "localhost",\n    Port = 61616,\n    User = "guest",\n    Password = "guest"\n};\n')),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"Host")," and ",(0,a.kt)("inlineCode",{parentName:"li"},"Port")," properties specify the TCP endpoint for the connection."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"User")," and ",(0,a.kt)("inlineCode",{parentName:"li"},"Password")," are credentials used to authenticate the client application with the broker.")),(0,a.kt)("h3",{id:"establishing-a-connection"},"Establishing a Connection"),(0,a.kt)("p",null,"To connect to an ActiveMQ Artemis node, create a ",(0,a.kt)("inlineCode",{parentName:"p"},"ConnectionFactory")," object. This factory provides a method to asynchronously create connections using the previously defined ",(0,a.kt)("inlineCode",{parentName:"p"},"Endpoint")," object."),(0,a.kt)("p",null,"Here is how you can connect to an ActiveMQ Artemis node using the ",(0,a.kt)("inlineCode",{parentName:"p"},"Endpoint")," configuration:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-csharp"},"var connectionFactory = new ConnectionFactory();\nvar connection = await connectionFactory.CreateAsync(endpoint);\n")),(0,a.kt)("p",null,"This example demonstrates how to connect to an ActiveMQ Artemis node using ",(0,a.kt)("inlineCode",{parentName:"p"},"localhost")," on port ",(0,a.kt)("inlineCode",{parentName:"p"},"61616")," with the username and password both set to ",(0,a.kt)("inlineCode",{parentName:"p"},"guest"),"."))}g.isMDXComponent=!0}}]);